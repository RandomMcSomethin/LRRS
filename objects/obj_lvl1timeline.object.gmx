<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_timeline</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
ini_open("save.ini");
ini_write_real("Save", "Level", 2);
ini_close();
nextLevel = rm_level2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (secondTimer == 3.1 &amp;&amp; !shopCheck(LEVELS, 0)) card("Taking Damage", "Hitting enemies or bullets will cause you to take damage.  When your health reaches zero, your ship is destroyed.", spr_health);
if (secondTimer == 3.2 &amp;&amp; !shopCheck(LEVELS, 0)) card("Systems", "Taking too much damage can knock out one or more of your systems, hindering your mobility and overall performance.  Collecting health pickups will restore all your systems to working condition.", spr_systems);
if (secondTimer == 3) playMusic(mus_zunwaves);
if (secondTimer == 4) instance_create(room_width/4, -50, obj_shooter);
if (secondTimer == 6) instance_create(room_width/8, -50, obj_shooter);
if (secondTimer == 7) instance_create(room_width*(3/8), -50, obj_shooter);
if (secondTimer == 10) instance_create(room_width/4, -50, obj_shooter);
if (secondTimer == 10) instance_create(room_width/8, -50, obj_shooter);
if (secondTimer == 10) instance_create(room_width*(3/8), -50, obj_shooter);
if (secondTimer == 12) instance_create(room_width*(1/6), -50, obj_shooter);
if (secondTimer == 12) instance_create(room_width*(2/6), -50, obj_shooter);
if (secondTimer == 14) { 
    e1 = instance_create(room_width/8, -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(2/3);
    e2 = instance_create(room_width/4, -50, obj_shooter);
    e2.movePattern = 1;
    e2.destX = room_width*(3/8);
    e2.destY = room_height*(2/3);
}
if (secondTimer == 14) { 
    e1 = instance_create(room_width/16, -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(3/4);
}
if (secondTimer == 14.5) { 
    e1 = instance_create(room_width/16, -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(2/3);
}
if (secondTimer == 15) { 
    e1 = instance_create(room_width/16, -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 15.5) { 
    e1 = instance_create(room_width*(7/16), -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(3/4);
}
if (secondTimer == 16) { 
    e1 = instance_create(room_width*(7/16), -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(2/3);
}
if (secondTimer == 16.5) { 
    e1 = instance_create(room_width*(7/16), -50, obj_shooter);
    e1.movePattern = 1;
    //e1.destX = room_width*(1/8);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 20) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = 0;
    e1.destY = room_height*(1/8);
}
if (secondTimer == 20.1) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(2/8);
    e1.destY = room_height*(1/8);
}
if (secondTimer == 20.2) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(3/8);
    e1.destY = room_height*(1/8);
}
if (secondTimer == 20.3) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(3/16);
    e1.destY = room_height*(1/4);
}
if (secondTimer == 20.4) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(5/16);
    e1.destY = room_height*(1/4);
}
if (secondTimer == 20.5) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(7/16);
    e1.destY = room_height*(1/4);
}
if (secondTimer == 24) instance_create(room_width/4, -50, obj_beamer);
if (secondTimer == 28) {
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*7/8;
}
if (secondTimer == 28.3) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(3/16);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 28.4) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(5/16);
    e1.destY = room_height*(1/4);
}
if (secondTimer == 28.5) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(7/16);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 29) instance_create(room_width*(1/8), -50, obj_beamer);
if (secondTimer == 30) instance_create(room_width*(1/4), -50, obj_beamer);
if (secondTimer == 31) instance_create(room_width*(3/8), -50, obj_beamer);
if (secondTimer == 33) {
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*7/8;
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*5/8;
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*3/8;
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*1/8;
}
if (secondTimer == 34) {
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*3/4;
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*1/2;
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*1/4;
    b = instance_create(room_width/2, -50, obj_beamer);
}
if (secondTimer == 38) {
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 2;
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destY = room_height*(5/8);
}
if (secondTimer == 40) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(1/8);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 41) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(3/8);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 53) {
    levelComplete = true;
    unlock(LEVELS, 0);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
