<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_menu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
menuItem[0] = "Options:";
menuItem[1] = "Screen Size: " + string(obj_manager.screenSize);
menuItem[2] = "Music Volume: " + string(round(SAVE_MAP[? "Music Volume"]*100)) + "%";
menuItem[3] = "SFX Volume: " + string(round(SAVE_MAP[? "SFX Volume"]*100)) + "%";
menuItem[4] = "Set Controls:"
menuItem[5] = "Reset Controls"
menuItem[6] = "Accessibility"
menuItem[7] = "Back";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
menuItem[0] = "Options:";
menuItem[1] = "Screen Size: " + string(obj_manager.screenSize);
menuItem[2] = "Music Volume: " + string(round(SAVE_MAP[? "Music Volume"]*100)) + "%";
menuItem[3] = "SFX Volume: " + string(round(SAVE_MAP[? "SFX Volume"]*100)) + "%";
menuItem[7] = "Back";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//You usually don't need event_inherited(); for this event.
if (menuItem[selected] != -1) {
    if (selected == 1) {
        if (SAVE_MAP[? "Screen Size"] &lt; 2) {
            SAVE_MAP[? "Screen Size"]++;
            view_wport[0] = room_width*SAVE_MAP[? "Screen Size"];
            view_hport[0] = room_height*SAVE_MAP[? "Screen Size"];
        } else if (SAVE_MAP[? "Screen Size"] == 2) {
            SAVE_MAP[? "Screen Size"]++;
            window_set_fullscreen(true);
        } else {
            window_set_fullscreen(false);
            SAVE_MAP[? "Screen Size"] = 1;
            view_wport[0] = room_width*SAVE_MAP[? "Screen Size"];
            view_hport[0] = room_height*SAVE_MAP[? "Screen Size"];
        }
    }
    if (selected == 2) {
        if (SAVE_MAP[? "Music Volume"] &lt; 1) {
            SAVE_MAP[? "Music Volume"] += 0.1;
        } else SAVE_MAP[? "Music Volume"] = 0;
        audio_emitter_gain(MUS, SAVE_MAP[? "Music Volume"]);
    }
    if (selected == 3) {
        if (SAVE_MAP[? "SFX Volume"] &lt; 1) {
            SAVE_MAP[? "SFX Volume"] += 0.1;
        } else SAVE_MAP[? "SFX Volume"] = 0;
        audio_emitter_gain(SFX, SAVE_MAP[? "SFX Volume"]);
    }
    if (selected == 4) {
        MANAGER.controlsSet = false;
    }
    if (selected == 5) {
        MANAGER.keySet[0, 0] = "Left"; MANAGER.keySet[0, 1] = vk_left;
        MANAGER.keySet[1, 0] = "Right"; MANAGER.keySet[1, 1] = vk_right;
        MANAGER.keySet[2, 0] = "Up"; MANAGER.keySet[2, 1] = vk_up;
        MANAGER.keySet[3, 0] = "Down"; MANAGER.keySet[3, 1] = vk_down;
        MANAGER.keySet[4, 0] = "Shoot"; MANAGER.keySet[4, 1] = ord("Z");
        MANAGER.keySet[5, 0] = "Focus"; MANAGER.keySet[5, 1] = ord("X");
        MANAGER.keySet[6, 0] = "Previous Weapon"; MANAGER.keySet[6, 1] = ord("C");
        MANAGER.keySet[7, 0] = "Next Weapon"; MANAGER.keySet[7, 1] = ord("V");
        MANAGER.keySet[8, 0] = "Use Special"; MANAGER.keySet[8, 1] = vk_shift;
        MANAGER.keySet[9, 0] = "Pause"; MANAGER.keySet[9, 1] = vk_escape;
        KEY_LEFT = MANAGER.keySet[0, 1];
        KEY_RIGHT = MANAGER.keySet[1, 1];
        KEY_UP = MANAGER.keySet[2, 1];
        KEY_DOWN = MANAGER.keySet[3, 1];
        KEY_SHOOT = MANAGER.keySet[4, 1];
        KEY_FOCUS = MANAGER.keySet[5, 1];
        KEY_PREV = MANAGER.keySet[6, 1];
        KEY_NEXT = MANAGER.keySet[7, 1];
        KEY_CHARGE = MANAGER.keySet[8, 1];
        KEY_PAUSE = MANAGER.keySet[9, 1];
    }
    if (selected == 6) {
         menu_open(obj_accessibility);
    }
    if (selected == 7) {
        save = ini_open("save.ini");
        ini_write_real("Options", "Screen Size", SAVE_MAP[? "Screen Size"]);
        ini_write_real("Options", "Music Volume", SAVE_MAP[? "Music Volume"]);
        ini_write_real("Options", "SFX Volume", SAVE_MAP[? "SFX Volume"]);
        ini_write_real("Controls", "Left Key", MANAGER.keySet[0, 1]);
        ini_write_real("Controls", "Right Key", MANAGER.keySet[1, 1]);
        ini_write_real("Controls", "Up Key", MANAGER.keySet[2, 1]);
        ini_write_real("Controls", "Down Key", MANAGER.keySet[3, 1]);
        ini_write_real("Controls", "Shoot Key", MANAGER.keySet[4, 1]);
        ini_write_real("Controls", "Focus Key", MANAGER.keySet[5, 1]);
        ini_write_real("Controls", "Prev. Key", MANAGER.keySet[6, 1]);
        ini_write_real("Controls", "Next Key", MANAGER.keySet[7, 1]);
        ini_write_real("Controls", "Special Key", MANAGER.keySet[8, 1]);
        ini_write_real("Controls", "Pause Key", MANAGER.keySet[9, 1]);
        ini_close();
        event_user(EV_MENUBACK);
    }
    playSFX(snd_menuconfirm);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
menu_open(obj_titlemenu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
