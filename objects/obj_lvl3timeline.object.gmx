<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_timeline</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
ini_open("save.ini");
ini_write_real("Save", "Level", 4);
ini_close();
nextLevel = rm_level4;
timer = 0;
background_vspeed[0] = 0.05;
background_vspeed[1] = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (secondTimer == 3) playMusic(mus_leveler);
if (secondTimer == 3) instance_create(room_width/4, -40, obj_asteroid);
if (secondTimer == 6) instance_create(room_width*(3/8), -20, obj_spiker);
if (secondTimer == 10) {
    a = instance_create(room_width/8, -50, obj_asteroid);
    with (a) {
        t1 = instance_create(x, y, obj_turret);
        t1.parent = id;
        t1.xOffset = 20;
        t1.yOffset = sprite_height*0.55;
        t1.dir = 80;
    }
}
if (secondTimer == 12) {
    e = instance_create(room_width/4, -50, obj_shooter);
    e.movePattern = 1;
    e.destY = room_height/8;
}
if (secondTimer == 12.3) { 
    e1 = instance_create(room_width/4, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(3/16);
    e1.destY = room_height/8;
}
if (secondTimer == 12.4) { 
    e1 = instance_create(room_width/4, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(5/16);
    e1.destY = room_height/8;
}
if (secondTimer == 15) { 
    e1 = instance_create(room_width/4, -50, obj_pitcher);
    e1.movePattern = 1;
    e1.destX = room_width/2;
    e1.destY = room_height/4;
}
if (secondTimer == 15.5) { 
    e1 = instance_create(room_width/4, -50, obj_pitcher);
    e1.movePattern = 1;
    e1.destX = 0;
    e1.destY = room_height*(3/4);
}
if (secondTimer == 20) instance_create(room_width/4, -50, obj_stinger);
if (secondTimer == 22) instance_create(room_width/8, -50, obj_spiker);
if (secondTimer == 22) {
    a = instance_create(room_width*(3/8), -50, obj_asteroid);
    with (a) {
        sprite_index = spr_asteroid2;
        t1 = instance_create(x, y, obj_turret);
        t1.parent = id;
        t1.xOffset = 65;
        t1.yOffset = sprite_height*0.52;
        t1.dir = 210;
        t2 = instance_create(x, y, obj_turret);
        t2.parent = id;
        t2.xOffset = -5;
        t2.yOffset = sprite_height*0.55;
        t2.dir = 270;
    }
}
if (secondTimer == 22.5) instance_create(room_width*(3/8), -50, obj_spiker);
if (secondTimer == 26) instance_create(room_width*(2.5/8), -50, obj_pitcher);
if (secondTimer == 26) {
    a = instance_create(room_width/8, -50, obj_asteroid);
    with (a) {
        sprite_index = spr_asteroid;
        t1 = instance_create(x, y, obj_turret);
        t1.parent = id;
        t1.xOffset = 40;
        t1.yOffset = 5;
        t1.dir = 0;
    }
}
if (secondTimer == 27) instance_create(room_width/4, -50, obj_stinger);
if (secondTimer == 28) instance_create(room_width/6, -50, obj_pitcher);
if (secondTimer == 28) instance_create(room_width*(2/6), -50, obj_pitcher);
if (secondTimer == 32) instance_create(room_width*(1/8), -20, obj_spiker);
if (secondTimer == 32) instance_create(room_width*(3/8), -20, obj_spiker);
if (secondTimer == 32.5) instance_create(room_width*(2/8), -20, obj_spiker);
if (secondTimer == 37) instance_create(room_width/4, -50, obj_stinger);
if (secondTimer == 37) instance_create(room_width/4, -40, obj_asteroid);
if (secondTimer == 40) instance_create(room_width/6, -50, obj_stinger);
if (secondTimer == 40.1) instance_create(room_width/5, -50, obj_stinger);
if (secondTimer == 40.2) instance_create(room_width/4, -50, obj_stinger);
if (secondTimer == 40.3) instance_create(room_width/3, -50, obj_stinger);
if (secondTimer == 53) levelComplete = true;
if (levelComplete) { unlock(LEVELS, 2); }
//debug(string(instance_count));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
