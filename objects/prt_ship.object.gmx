<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
focus = false;
maxSpeed = moveSpeed;
blendTimer = 0;
charge = 0;
weapon = SAVE_MAP[? "Weapon 1"];
weaponTimer = 0;
weaponCardSprite = spr_blankcard;
pow = 0;
maxPow = 3;
lwing = 0;
rwing = 0;
hull = 0;
weaponsys = 0;
iFrames = 60;
moveTimer = 0;
scanlineTimer = 0;
dialogue = "Don't be racist, I am a dialogue test.";
dispText = "";
textSpeed = 0.4;
txt = 0;
death = spr_gitgud;
name = "Player";
obj_manager.isLevel = true;
graze = 0;
grazeRadius = 15;
special = "Default";
specialDesc = "Doesn't seem to do anything.#How enigmatic!";
//acceleration = 0.3;
mTT = 0; //To clarify, stands for "Mini-Toast Timer," not Mettaton
mtText = "";
lockWeapon = false;
weaponLock = 1;
color_row_index = 0;
color_sets = 5;
v_offset = shader_get_uniform(shader_paletteswap, "offset");
v_normal = 0;
pSSampler = shader_get_sampler_index(shader_paletteswap, "Palette");
palettes = background_get_texture(bg_shippalettes);
paletteNumber = SAVE_MAP[? "Color"];
element = 0; //0 = Energy, 1 = Fire, 2 = Ice, 3 = Electricity, 4 = Locked
deathAnim = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (PAUSED) exit;
playerMovement();
//Focus handler
if (focus &amp;&amp; !INPUT_LOCKED) { 
    moveSpeed = maxSpeed/3;
    if (blendTimer &lt; 5) {
        blendTimer++;
    }
} else { 
    moveSpeed = maxSpeed;
    if (blendTimer &gt; 0) {
        blendTimer--;
    }
}
//Weapon handler
if (lockWeapon) {
    weapon = weaponLock;
}
if ((weaponsys == 0 || choose(1, 2, 3, 4, 5) == 1) &amp;&amp; !INPUT_LOCKED) {
    if (keyboard_check(KEY_SHOOT) &amp;&amp; !PAUSED) {
        if (weapon == 1) {
            peashooterFire();
        }
        if (weapon == 2) {
            energyBulletFire();
        }
        if (weapon == 3) {
            scrambleThunderFire();
        }
        if (weapon == 4) {
            iceCubeFire();
        }
    } //else if (weaponTimer &gt;= 0) weaponTimer = 0;
    if (weapon == 1) {
        element = 0;
        weaponCardSprite = spr_peashootercard;
    }
    if (weapon == 2) {
        element = 4;
        weaponCardSprite = spr_energybulletcard;
    }
    if (weapon == 3) {
        element = 3;
        weaponCardSprite = spr_scramblethundercard;
    }
    if (weapon == 4) {
        element = 2;
        weaponCardSprite = spr_icecubecard;
    }
}
//Aesthetic handler
scanlineTimer++;
if scanlineTimer &gt; 256 scanlineTimer = 0;

//Dialogue handler
if (DIALOGUE != dispText) {
    txt += textSpeed;
    dispText = string_copy(DIALOGUE, 1, txt);
} else txt = 0;
//Special handler
if (keyboard_check(KEY_CHARGE) &amp;&amp; !INPUT_LOCKED) {
    event_user(EV_SPECIAL);
}
//Burn effect handler
if (burnTimer mod 40 == 0 &amp;&amp; burnTimer != 0) {
    screenShake(15, 1);
}
//Palette handler
if (frozen == 0) paletteNumber = SAVE_MAP[? "Color"]; else paletteNumber = 255;
if (burning == 0) paletteNumber = SAVE_MAP[? "Color"]; else paletteNumber = 254;
if (iF == 0) paletteNumber = SAVE_MAP[? "Color"]; else paletteNumber = 253;
color_row_index = paletteNumber;
v_normal = color_row_index/256
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prt_entity">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (other.faction != faction) {
    KILLER = other.name;
    var i = 0;
    while (charge - 0.02 &gt; 0 &amp;&amp; i != 10) {
        charge -= 0.02;
        i++;
    }
    if (file_exists("death.png")) file_delete("death.png");
    /*Hacky solution to weird screenshot problem
    var oldWidth = surface_get_width(application_surface);
    var oldHeight = surface_get_height(application_surface);
    surface_resize(application_surface, sqr(room_width)/window_get_width(), sqr(room_height)/window_get_height());
    screen_save_part("death.png", x - 32, y - 32, 64, 64);
    surface_resize(application_surface, oldWidth, oldHeight); */
    surface_save_part(application_surface, "death.png", x - 32, y - 32, 64, 64);
    if (sprite_exists(death) &amp;&amp; sprite_get_name(death) != "spr_gitgud") sprite_delete(death);
    death = sprite_add("death.png", 1, true, true, 32, 32); 
    obj_manager.deathSpr = death;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (hp &lt;= 0) {
    instance_destroy();
    audio_stop_all();
    playSFX(snd_playerexplosion);
}
iF = iFrames;
collidedEntity = noone;
playSFX(snd_hit);
//Systems can become damaged if critical damage is received
randomize();
if (hp &lt; 0.4 &amp;&amp; weaponsys == 0) {
    weaponsys = choose(0, 0, 0, 0, 0, 1); //Weapons have a 1 in 6 chance to malfunction
}
if (hp &lt; 0.3 &amp;&amp; rwing == 0) {
    rwing = choose(0, 0, 0, 1); //The right wing has a 1 in 4 chance to break
}
if (hp &lt; 0.3 &amp;&amp; lwing == 0) {
    lwing = choose(0, 0, 0, 1); //The left wing has a 1 in 4 chance to break
}
if (hp &lt; 0.2 &amp;&amp; hull == 0) {
    hull = choose(0, 0, 3); //The hull has a 1 in 3 chance to be damaged
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!PAUSED) drawHUDElements();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
shader_set(shader_paletteswap);
texture_set_stage(pSSampler, palettes);
shader_set_uniform_f(v_offset, v_normal);
draw_self();
shader_reset();

for (i = 0; i &lt; frozen*3; i++) {
    draw_sprite_ext(spr_icecrystals, frozen*3, x, y, 1, 1, i*120, c_white, 1);
}
if (PAUSED) exit;
grazeBonus();
reflect();
if (mTT &gt; 0) {
    mTT--;
    draw_set_alpha(1 - 1/mTT);
    draw_set_font(font_gamefont);
    draw_set_color(c_yellow);
    draw_text(x, y - sprite_width, mTText);
    draw_set_alpha(1);
    draw_set_color(c_white);
} else mTText = "";
if (burning &gt; 0) {
    draw_sprite_ext(spr_flame, -1, x + sprite_width, y - sprite_height/2, 1, 1, 0, c_gray, 1);
    draw_sprite_part_ext(spr_flame, -1, 0, 0, 10, 16 - 16/burnTimer, x + sprite_width - 5, y - sprite_height/2 - 14, 1, 1, fireColor, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
