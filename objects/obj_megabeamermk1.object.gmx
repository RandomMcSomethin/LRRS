<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_megabeamermk1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_boss</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
attack = 1;
hp = 5.0
maxhp = 5.0;
image_speed = 0.5;
beam = noone;
beamTimer = 0;
beamColor = c_red;
logNumber = 5;
t1 = instance_create(x, y, obj_megabeamerturret2);
t1.parent = id;
t1.xOffset = 10;
t1.yOffset = 10;
t1.dir = 90;
t2 = instance_create(x, y, obj_megabeamerturret1);
t2.parent = id;
t2.xOffset = 10;
t2.yOffset = 10;
t2.dir = 270;
t2.attackTimer = 30;
resist[2] = 0.7;
atmr = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (instance_exists(beam)) instance_destroy(beam);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (PAUSED) exit;
if (deathAnim) exit;
//Movement stuff
enemyMovementMegabeamer();
if !instance_exists(target) exit;
switch (attack)
{
    case 1:
        xspeed = 0;
        if (atmr &lt; 120) {
            pointDirection = point_direction(x, y, target.x, target.y);
            if (atmr == 50) t1.attackTimer = 0;
            if (atmr &gt; 80 &amp;&amp; atmr mod 5 == 0) {
                with (t1) { event_user(EV_SHOOT); }
            }
        } else if (atmr &lt; 240) {
            pointDirection = point_direction(x, y, target.x, target.y);
            if (atmr &gt; 200 &amp;&amp; atmr mod 15 == 0) {
                with (t2) { event_user(EV_SHOOT); }
            }
        } else { attack = 2; attackTimer = 0;}
    break;
    case 2:
        if (atmr &lt; 120) {
            if (x &lt; room_width*(1/3)) xspeed = 2.5; else attack = 3;
        } else {attack = 3; attackTimer = 0;}
    break;
    case 3:
    xspeed = 0;
        //Charges after 1 seconds of being still
if (atmr == 60) {
    var charge = playSFX(snd_charge);
    audio_sound_pitch(charge, 0.5);
    beamTimer = 120;
}
//Charging
if (atmr &gt; 0 &amp;&amp; atmr &lt; 120 &amp;&amp; instance_exists(target)) { pointDirection = point_direction(x, y, target.x, target.y);
    if (atmr == 50) t1.attackTimer = 0;
    if (atmr &gt; 80 &amp;&amp; atmr mod 5 == 0) {
                with (t1) { event_user(EV_SHOOT); }
    }
}
if (atmr &gt; 120 &amp;&amp; atmr &lt; 180) {
    if (atmr mod 15 == 0) {
        with (t2) { event_user(EV_SHOOT); }
    }
}
//Fire beam
if (atmr == 180) {
    event_user(3);
}
if (atmr &gt; 300) {
    if (instance_exists(beam)) instance_destroy(beam); attack = 4; attackTimer = 0;}
    break;
    
    case 4:
        if (atmr &lt; 120) {
            if (x &gt; room_width/6) xspeed = -2.5; else attack = 1;
        } else { attack = 1; attackTimer = 0; }
    break;
    case 5: //Desperation Attack
        if (x &lt; room_width*(1/4)) xspeed = 1;
        else if (x &gt; room_width/4) xspeed = -1; else xspeed = 0;
        summonLaser(5, 270, room_width/8);
        summonLaser(15, 270, room_width/4);
        summonLaser(25, 270, room_width*(3/8));
        
        summonLaser(80, 300, room_width/8);
        summonLaser(70, 265, room_width/4);
        summonLaser(60, 250, room_width*(3/8));
        
        summonLaser(200, 270, room_width/16);
        summonLaser(205, 270, room_width*(3/16));
        summonLaser(210, 270, room_width*(5/16));
        summonLaser(215, 270, room_width*(7/16));
        summonLaser(220, 270, room_width*(6/16));
        summonLaser(225, 270, room_width*(4/16));
        summonLaser(230, 270, room_width*(2/16));
        if (atmr &gt; 350 &amp;&amp; atmr &lt; 750) {
            pointDirection += 2;
            if (atmr mod 3 == 0) {
                with (t1) { event_user(EV_SHOOT); } 
            }
        }
        if (atmr &gt; 750 &amp;&amp; atmr &lt; 900) {
            pointDirection += 4;
            if (atmr mod 3 == 0) {
                with (t1) { event_user(EV_SHOOT); } 
            }
            if (atmr mod 7 == 0) {
                with (t2) { event_user(EV_SHOOT); } 
            }
        }
        if (atmr == 900) { attack = 1; attackTimer = 0; xspeed = 0; canHit = 1;}
    break;
}

if (hp &lt;= maxhp/2 &amp;&amp; !desperationAttack) {
    if (instance_exists(beam)) instance_destroy(beam);
    desperationAttack = true;
    w = instance_create(0, room_height/8, prt_toast);
    w.text = "'Beams of Death'";
    w.timer = -600;
    attack = 5;
    attackTimer = 0;
    canHit = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!deathAnim) { deathAnim = true; attackTimer = 0; canHit = 0; xspeed = 0; yspeed = 0; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(target)) {
    var fireAngle = image_angle;
    beam = instance_create(x + lengthdir_x((sprite_width)/1.8, fireAngle), y + lengthdir_y(sprite_height/1.8, fireAngle), obj_beam);
    beam.image_angle = fireAngle;
    var sfx = playSFX(snd_beam);
    audio_sound_pitch(sfx, 0.5);
    screenShake(15, 5);
    var p_flare = createSimpleParticle(pt_shape_flare, 0.2, 5, 7, c_white);
    part_type_alpha3(p_flare, 1, 1, 0);
    part_type_size(p_flare, 0.2, 0.3, 0, 0.1);
    part_particles_create(SNAME, x + lengthdir_x((sprite_width*image_xscale)/2, fireAngle), y + lengthdir_y(sprite_height/2, fireAngle), p_flare, 1);
    screenShake(10, 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(target)) {
    var fireAngle = point_direction(x, y, target.x, target.y - 4);
    b = instance_create(x + lengthdir_x((sprite_width*image_xscale)/2, fireAngle), y + lengthdir_y(sprite_height/2, fireAngle), obj_enemybullet);
    b.xspeed = 3*cos(degtorad(fireAngle));
    b.yspeed = -3*sin(degtorad(fireAngle));
    playSFX(snd_enemyshoot);
    var p_shooter = part_type_create(); 
    part_type_color1(p_shooter, $006AFF); 
    part_type_direction(p_shooter, 0, 360, 0, 0);
    part_type_life(p_shooter, 10, 15);
    part_type_gravity(p_shooter, 0.07, 270);
    part_type_alpha3(p_shooter, 1, 1, 0);
    part_type_speed(p_shooter, 0.5, 0.8, 0, 0);
    part_type_sprite(p_shooter, spr_pixel, false, false, false);
    part_particles_create(SNAME, x + lengthdir_x((sprite_width*image_xscale)/2, fireAngle), y + lengthdir_y(sprite_height/2, fireAngle), p_shooter, 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (beamTimer &gt; 0) {
    beamTimer--;
    draw_set_alpha(2 - beamTimer/60);
    if (beamTimer mod 5 == 0) {
        if (beamTimer == c_red) beamColor = c_orange; else beamColor = c_red;
    }
    draw_set_color(beamColor);
    draw_line(x + lengthdir_x(sprite_width*image_xscale/2, image_angle), y + lengthdir_y(sprite_height*image_yscale/2, image_angle), x + lengthdir_x(room_width, image_angle), y + lengthdir_y(room_width, image_angle));
    draw_set_color(c_white);
    draw_set_alpha(1);
}
image_blend = statFX();
draw_self();
drawFreeze();
drawStun();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
