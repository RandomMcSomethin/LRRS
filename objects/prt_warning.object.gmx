<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>title = "WARNING:";
subtitle = "Enemy approaching!";
timer = 0;
color = c_red;
px = 0;

playSFX(snd_warning);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer++;
draw_set_color(color);
draw_set_alpha(0.3*sin(timer/8));
draw_rectangle(0, 0, room_width/2, room_height, false);
draw_set_color(c_white);
draw_set_alpha(0.3*sin(timer/8) + 0.7);
draw_set_halign(fa_middle);
draw_set_font(font_gamefont);
draw_text(room_width/4, room_height*(7/16), title);
draw_set_font(font_menufont);
draw_text(room_width/4, room_height*(9/16), subtitle);
draw_set_alpha(-0.3*sin(timer/8));
draw_rectangle(0, 0, room_width/2, room_height, false);
draw_set_alpha(1);
if (timer &lt; room_width/3 &amp;&amp; px &lt; room_width/2) {
    px += room_width/(room_width/4);
    draw_line(0, room_height*(3/8), px, room_height*(3/8));
    draw_line(room_width/2, room_height*(5/8), room_width/2 - px, room_height*(5/8));
} else if (timer &gt;= room_width/3 &amp;&amp; px &gt; 0) {
    px -= room_width/(room_width/4);
    draw_line(room_width/2, room_height*(3/8), room_width/2 - px, room_height*(3/8));
    draw_line(0, room_height*(5/8), px, room_height*(5/8));
} if (timer &gt;= room_width/3 &amp;&amp; px == 0 &amp;&amp; 0.3*sin(timer/8) &lt;= 0.1 &amp;&amp; -0.3*sin(timer/8) &lt;= 0.1) {
    instance_destroy();
}
if (px == room_width/2) {
    draw_line(0, room_height*(3/8), room_width/2, room_height*(3/8));
    draw_line(0, room_height*(5/8), room_width/2, room_height*(5/8));
}
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
