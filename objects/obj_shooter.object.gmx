<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shooter_rc</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_shipenemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
image_speed = 0.3;
hp = 0.3;
logNumber = 1;
damage = 0.1;
image_angle = 270;
movePattern = 0;
destX = x;
destY = y;

spriteType = 1;
maskSprite = spr_shootermask;
maskColor = $00F0FF;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (SAVE_MAP[? "Shooter Kills"] &lt; 15) {
    SAVE_MAP[? "Shooter Kills"]++;
    setIniReal("save.ini", "Save", "Shooter Kills", SAVE_MAP[? "Shooter Kills"]);
} else if (getIniReal("save.ini", "Save", "Shooter", 0) == 0) { toast("Ship Unlocked: Shooter"); playSFX(snd_menuconfirm); setIniReal("save.ini", "Save", "Shooter", 1)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (PAUSED) exit;
//Movement stuff
if (movePattern == 0) enemyMovementDefault();
if (movePattern == 1) enemyMovementPoint(destX, destY);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(target)) {
    var fireAngle = point_direction(x, y, target.x, target.y - 4);
    b = instance_create(x + lengthdir_x((sprite_width*image_xscale)/2, fireAngle), y + lengthdir_y(sprite_height/2, fireAngle), obj_enemybullet);
    b.xspeed = 3*cos(degtorad(fireAngle));
    b.yspeed = -3*sin(degtorad(fireAngle));
    playSFX(snd_enemyshoot);
    image_xscale = 0.7;
    var p_shooter = part_type_create(); 
    part_type_color1(p_shooter, maskColor); 
    part_type_direction(p_shooter, 0, 360, 0, 0);
    part_type_life(p_shooter, 10, 15);
    part_type_gravity(p_shooter, 0.07, 270);
    part_type_alpha3(p_shooter, 1, 1, 0);
    part_type_speed(p_shooter, 0.5, 0.8, 0, 0);
    part_type_sprite(p_shooter, spr_pixel, false, false, false);
    part_particles_create(SNAME, x + lengthdir_x((sprite_width*image_xscale)/2, fireAngle), y + lengthdir_y(sprite_height/2, fireAngle), p_shooter, 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (image_xscale &lt; 1) image_xscale += 0.1; else image_xscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
