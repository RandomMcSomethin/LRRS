<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Entity settings
hp = 1; //Hitpoints
maxhp = hp;
armor = 0; //0 = vulnerable to everything, 1 = invulnerable to light non-elemental attacks
            //2 = invulnerable to everything
armored = false; //Works differently than previous armor

damage = 0.1; //self-explanatory
canHit = 1; //1 = can be hit, 0 = cannot be hit
faction = 1; //1 = player, 2 = enemy, 3 = neutral
collidedEntity = noone; //Used to pass the collided entity onto events
iFrames = 20; //Invulnerability frames
iF = 0; //See above
name = "Entity"; //Used for various things
disc = "Words cannot describe this object."; //Used for various things
height = "153 cm"; //Used for various things
weight = "10 kg"; //Used for various things
isBullet = false; //Because apparently I cannot figure out whether objects are bullets
                //or not in the collision event
isBoss = false; //Same goes for bosses

reflectable = 0; // 0 = cannot be reflected by the player, 1 = can be reflected by the player
color = c_white;                

xspeed = 0; //Used in physics
yspeed = 0; //Used in physics
moveSpeed = 3; //Used in physics
acceleration = 1; //Used in physics
facingDirection = 0; //Used in physics
imgSpeed = image_speed; //Captures the image speed when not frozen
setImgSpeed = false; //Set image speed yet?

element = 0; //For enemies, describes their affinity.
             //For bullets, describes their properties.
resist = array_create(4); //Amount of resistance to each element (plasma, fire, ice, electricity)
for (i = 0; i &lt; array_length_1d(resist); i++) {
    resist[i] = 0;
}

moveFactor = 1; //How time moves for this entity
frozen = 0; //From 0 to 1, how frozen the entity is
freezeTimer = 0; //Entity stays frozen for this length of time
freeziness = 0; //How much this bullet will contribute to freezing an entity

burning = 0; //From 0 to 1, how often this entity takes burn damage
burnTimer = 0; //Entity burns for this length of time
burniness = 0; //How much this bullet will contribute to burning an entity
fireColor = c_red; //Color of the burning effect
             
stunned = 0; //0 or 1, depending on whether or not the entity is stunned (from electricity)
stunTimer = 0; //Entity is stunned for this length of time
stunChance = 0; //0-1, the chance that this bullet will stun an enemy
stunLength = -1; //How long this stuns an entity (-1 = proportional to stunChance, anything else is length in frames)

flagCount = 3; //Flags used in AI to trigger events (firing, charging, etc.)

for (i = 0; i &lt; flagCount; i++) {
    flag[i] = 0;
}

blendTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>explosion();
playSFX(snd_explosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (PAUSED) exit;
entityPhysics();
if (iF &gt; 0) {
    iF--;
}
entityHandleIce();
entityHandleFire();
entityHandleElec();

//imgSpeed
if (!setImgSpeed) { imgSpeed = image_speed; setImgSpeed = true; }
image_speed = imgSpeed*moveFactor*(1 - stunned);

if (!isBullet) {
    if (hp &lt;= 0 &amp;&amp; !isBoss) {
        instance_destroy();
    } else if (hp &lt;= 0) event_user(4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="prt_entity">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(other) &amp;&amp; other.faction != faction &amp;&amp; other.iF == 0 &amp;&amp; !(isBullet &amp;&amp; other.isBullet)) {
        collidedEntity = other;
        if (other.canHit == 1) event_user(EV_ATTACK);
        other.iFrames = ceil(damage*50);
        if (damage != 0) {
            with (other) {
                if (canHit == 1) event_user(EV_HIT);
                //collidedEntity = other;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hit event
iF = iFrames;
collidedEntity = noone;
if (hp &lt;= 0 &amp;&amp; !isBoss) {
    instance_destroy();
} else if (hp &lt;= 0) event_user(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack event
if (collidedEntity.hp &gt; 0 &amp;&amp; collidedEntity.iF == 0 &amp;&amp; instance_exists(collidedEntity)) { //Deals damage if iframes are not zero   
    //--Main attack code:
    var dmg = damage; //Manipulated for damage calculations
    if (collidedEntity.armored) { dmg = dmg*0.3; //Armor negates some damage
    playSFX(snd_clank1); }
    
    for (i = 0; i &lt; array_length_1d(resist); i++) { //Damage is dealt according to each element
        if (element == i) collidedEntity.hp -= dmg*(1 - collidedEntity.resist[i]); //Damage is only dealt if the element check matches the attacker's element so that damage is not
                                                                    //dealt four times
    }
    //--Element types:
    if (instance_exists(collidedEntity)) {
        //Fire
        if (collidedEntity.resist[1] &lt; 1) { 
            if (element == 1 &amp;&amp; isBullet) {
                collidedEntity.burning += damage*10*(1 - collidedEntity.resist[1]);
                collidedEntity.burnTimer = burniness*500*(1 - collidedEntity.resist[1]);
                collidedEntity.frozen = 0;
                collidedEntity.freezeTimer = 0;
            }
        }
        //Ice
        if (collidedEntity.resist[2] &lt; 1) { 
            if (element == 2 &amp;&amp; isBullet) {
                if (collidedEntity.frozen + freeziness &lt; 1) { collidedEntity.frozen += freeziness*(1 - collidedEntity.resist[2]); } 
                else { collidedEntity.freezeTimer = 240; collidedEntity.frozen = 1; }
                collidedEntity.burning = 0;
                collidedEntity.burnTimer = 0;
            }
            if (element != 2 &amp;&amp; collidedEntity.hp &lt;= 0.1 &amp;&amp; !collidedEntity.isBoss &amp;&amp; collidedEntity.frozen == 1) {
                instance_destroy(collidedEntity); //Extra damage to frozen entities from non-ice weapons
            }
        }
        //Electricity
        if (collidedEntity.resist[3] &lt; 1) { 
            if (element == 3 &amp;&amp; isBullet) {
                randomize();
                if (collidedEntity.stunned == 0 &amp;&amp; (random(100) &lt; stunChance*(1 - collidedEntity.resist[3]))) //Stun
                {
                    collidedEntity.stunned = 1;
                    collidedEntity.stunTimer = stunLength*(1 - collidedEntity.resist[3]);
                }
            }
        }
    }
}
collidedEntity = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = statFX();
draw_self();
drawFreeze();
drawStun();
//draw_text(x, y - 5, freezeTimer);
//draw_text(x, y - 10, frozen);
//draw_text(x, y - 10, resist[2]);
//draw_text(x, y - 5, stunned);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
