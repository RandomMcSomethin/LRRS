<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_timeline</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
ini_open("save.ini");
ini_write_real("Save", "Level", 5);
ini_close();
nextLevel = rm_level4;
timer = 0;
background_vspeed[0] = 0.1;
background_vspeed[1] = 0.1;
background_vspeed[2] = 0.1;
background_vspeed[3] = 0.1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (secondTimer == 3) playMusic(mus_snowonsnowonsnow);
if (secondTimer == 4) instance_create(room_width*(3/8), -20, obj_shooter);
if (secondTimer == 6) instance_create(room_width*(1/8), -20, obj_shooter);
if (secondTimer == 8) instance_create(room_width*(2/8), -20, obj_multishooter);
if (secondTimer == 12) { 
    e1 = instance_create(room_width*(1/8), -50, obj_spiker);
    e1.movePattern = 1;
    e1.destY = room_height*(1/4);
    e2 = instance_create(room_width*(1/8), -50, obj_spiker);
    e2.movePattern = 1;
    e2.destY = room_height*(3/4);
    e3 = instance_create(room_width*(3/8), -50, obj_spiker);
    e3.movePattern = 1;
    e3.destY = room_height*(1/4);
    e4 = instance_create(room_width*(3/8), -50, obj_spiker);
    e4.movePattern = 1;
    e4.destY = room_height*(3/4);
}
if (secondTimer == 16) instance_create(room_width*(2/8), -20, obj_multishooter);
if (secondTimer == 20) instance_create(room_width*(1/8), -20, obj_icicler);
if (secondTimer == 26) instance_create(room_width*(2/8), -20, obj_icicler);
if (secondTimer == 27) instance_create(room_width*(1/8), -20, obj_multishooter);
if (secondTimer == 27.5) instance_create(room_width*(3/8), -20, obj_multishooter);
if (secondTimer == 30) l1 = instance_create(room_width*(2/8), -20, obj_laserenemy);
if (secondTimer == 40) l1.flag[2] = 1;
if (secondTimer == 60) levelComplete = true;
if (levelComplete) { unlock(LEVELS, 3); }
//debug(string(instance_count));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
