<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_timeline</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
ini_open("save.ini");
ini_write_real("Save", "Level", 5);
ini_close();
nextLevel = rm_level4;
timer = 0;
Sname = SNAME;
particle1 = part_type_create();
part_type_shape(particle1,pt_shape_star);
part_type_size(particle1,0.10,0.10,0,0);
part_type_scale(particle1,1,1);
part_type_color3(particle1,16777215,15794122,16777088);
part_type_alpha1(particle1,1);
part_type_speed(particle1,3,5,0,0.20);
part_type_direction(particle1,320,350,0,10);
part_type_gravity(particle1,-0.05,285);
part_type_orientation(particle1,0,0,1,0,1);
part_type_blend(particle1,1);
part_type_life(particle1,360,720);
emitter1 = part_emitter_create(SNAME);
part_emitter_region(Sname,emitter1,0,-20,-room_height/4,room_height*(5/4),ps_shape_line,1);
background_vspeed[0] = 1;
background_vspeed[1] = 1;
background_vspeed[2] = 1;
background_vspeed[3] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (secondTimer == 3) playMusic(mus_snowonsnowonsnow);
if (secondTimer == 4) instance_create(room_width*(3/8), -20, obj_shooter);
if (secondTimer == 6) instance_create(room_width*(1/8), -20, obj_shooter);
if (secondTimer == 8) instance_create(room_width*(2/8), -20, obj_multishooter);
if (secondTimer == 12) { 
    e1 = instance_create(room_width*(1/8), -50, obj_spiker);
    e1.movePattern = 1;
    e1.destY = room_height*(1/4);
    e2 = instance_create(room_width*(1/8), -50, obj_spiker);
    e2.movePattern = 1;
    e2.destY = room_height*(3/4);
    e3 = instance_create(room_width*(3/8), -50, obj_spiker);
    e3.movePattern = 1;
    e3.destY = room_height*(1/4);
    e4 = instance_create(room_width*(3/8), -50, obj_spiker);
    e4.movePattern = 1;
    e4.destY = room_height*(3/4);
}
if (secondTimer == 16) instance_create(room_width*(2/8), -20, obj_multishooter);
if (secondTimer == 20) instance_create(room_width*(1/8), -20, obj_icicler);
if (secondTimer == 26) instance_create(room_width*(2/8), -20, obj_icicler);
if (secondTimer == 27) instance_create(room_width*(1/8), -20, obj_multishooter);
if (secondTimer == 27.5) instance_create(room_width*(3/8), -20, obj_multishooter);
if (secondTimer == 30) l1 = instance_create(room_width*(2/8), -20, obj_laserenemy);
if (secondTimer == 32) instance_create(room_width*(1/8), -20, obj_multishooter);
if (secondTimer == 35) instance_create(room_width*(3/8), -20, obj_multishooter);
if (secondTimer == 40 &amp;&amp; instance_exists(l1)) l1.flag[2] = 1;
if (secondTimer == 40) { 
    l2 = instance_create(room_width/16, -20, obj_laserenemy); 
}
if (secondTimer == 40) {
    l2.angle = 0;
    l2.destY = room_height*0.8;
}
if (secondTimer == 41) { 
    l3 = instance_create(room_width/2 - room_width/16, -20, obj_laserenemy); 
}
if (secondTimer == 41) {
    l3.angle = 180;
    l3.destY = room_height*0.3;
}
if (secondTimer == 44) instance_create(room_width*(3/8), -20, obj_multishooter);
if (secondTimer == 45) { 
    instance_create(room_width*(2/8), -20, obj_whitestinger);
    with (obj_laserenemy) flag[2] = 1;
}
if (secondTimer == 47) {
    l1 = instance_create(room_width*(1/12), -20, obj_laserenemy);
    l1.angle = 260;
    l2 = instance_create(room_width*(2/12), -20, obj_laserenemy);
    l2.angle = 265;
    l3 = instance_create(room_width*(3/12), -20, obj_laserenemy);
    l3.angle = 270;
    l4 = instance_create(room_width*(4/12), -20, obj_laserenemy);
    l4.angle = 275;
    l5 = instance_create(room_width*(5/12), -20, obj_laserenemy);
    l5.angle = 280;
}
if (secondTimer == 49) {
    instance_create(room_width*(1/8), -20, obj_multishooter);
    instance_create(room_width*(2/8), -20, obj_multishooter);
    instance_create(room_width*(3/8), -20, obj_multishooter);
}
if (secondTimer == 50) {
    with (obj_laserenemy) flag[2] = 1;
    l1 = instance_create(room_width*(1/12), -20, obj_laserenemy);
    l1.angle = 270;
    l2 = instance_create(room_width*(2/12), -20, obj_laserenemy);
    l2.angle = 265;
    l3 = instance_create(room_width*(3/12), -20, obj_laserenemy);
    l3.angle = 270;
    l4 = instance_create(room_width*(4/12), -20, obj_laserenemy);
    l4.angle = 275;
    l5 = instance_create(room_width*(5/12), -20, obj_laserenemy);
    l5.angle = 270;
}
if (secondTimer == 52) {
    e1 = instance_create(room_width*(1/8), -20, obj_splitspiker);
    e1.movePattern = 2;
    e1.angle = 265;
    e2 = instance_create(room_width*(3/8), -20, obj_splitspiker);
    e2.movePattern = 2;
    e2.angle = 275;
}
if (secondTimer == 54) {
    with (obj_laserenemy) flag[2] = 1;
    l1 = instance_create(room_width*(1/12), -20, obj_laserenemy);
    l1.angle = 280;
    l2 = instance_create(room_width*(2/12), -20, obj_laserenemy);
    l2.angle = 275;
    l3 = instance_create(room_width*(3/12), -20, obj_laserenemy);
    l3.angle = 270;
    l4 = instance_create(room_width*(4/12), -20, obj_laserenemy);
    l4.angle = 265;
    l5 = instance_create(room_width*(5/12), -20, obj_laserenemy);
    l5.angle = 260;
}
if (secondTimer == 54.5) {
    l1 = instance_create(room_width*(1/64), -20, obj_laserenemy);
    l1.angle = 0;
    l1.destY = room_height*(1/6);
    l2 = instance_create(room_width*(1/64), -20, obj_laserenemy);
    l2.angle = 0;
    l2.destY = room_height*(2/6);
    l3 = instance_create(room_width*(1/64), -20, obj_laserenemy);
    l3.angle = 0;
    l3.destY = room_height*(3/6);
    l4 = instance_create(room_width*(1/64), -20, obj_laserenemy);
    l4.angle = 0;
    l4.destY = room_height*(4/6);
    l5 = instance_create(room_width*(1/64), -20, obj_laserenemy);
    l5.angle = 0;
    l5.destY = room_height*(5/6);
}
if (secondTimer == 56) {
    instance_create(room_width/4, -20, obj_pitcher);
    e1 = instance_create(room_width*(1/8), -20, obj_splitspiker);
    e1.movePattern = 2;
    e1.angle = 300;
    e2 = instance_create(room_width*(3/8), -20, obj_splitspiker);
    e2.movePattern = 2;
    e2.angle = 210;
}
if (secondTimer == 60) {
    with (obj_laserenemy) flag[2] = 1;
}
if (secondTimer &gt;= 62) levelComplete = true;
if (levelComplete) { unlock(LEVELS, 3); }
//debug(string(instance_count));

if (!PAUSED &amp;&amp; !levelComplete) {
    if (background_alpha[3] &gt; 0) { background_alpha[3] -= 0.0005; }
    else if (background_alpha[2] &gt; 0) { background_alpha[2] -= 0.001; }
    else if (background_alpha[1] &gt; 0) { background_alpha[1] -= 0.001; }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (part_emitter_exists(SNAME, emitter1)) part_emitter_destroy(SNAME, emitter1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (part_emitter_exists(SNAME, emitter1)) {
    part_emitter_stream(Sname,emitter1,particle1,2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
