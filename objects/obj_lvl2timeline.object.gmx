<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_timeline</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
ini_open("save.ini");
ini_write_real("Save", "Level", 3);
ini_close();
nextLevel = rm_level3;
timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (secondTimer == 3) playMusic(mus_catacombs);
if (secondTimer == 3.1 &amp;&amp; !shopCheck(LEVELS, 1)) card("Grazing Bullets", "Getting close to a bullet without getting hit will give you a graze bonus.  This bonus will be added to your charge meter.  Be careful: if you get hit, your charge meter will deplete!", spr_graze);
if (secondTimer == 3.3 &amp;&amp; !shopCheck(LEVELS, 1)) card("Focus", "Hold the " + chr(KEY_FOCUS) + " key to go into Focus.  In this state, you will move more slowly, allowing you to dodge more precisely.", spr_focus);
if (secondTimer == 3.2 &amp;&amp; !shopCheck(LEVELS, 1)) card("Using Specials", "Press the special key (bound to SHIFT by default) to use your special.  Your special can only be used once your charge meter has reached the appropriate percentage.", spr_special);
if (secondTimer == 4) instance_create(room_width/4, -50, obj_pitcher);
if (secondTimer == 7) instance_create(room_width/8, -50, obj_pitcher);
if (secondTimer == 8) instance_create(room_width*(3/8), -50, obj_pitcher);
if (secondTimer == 12) {
    b = instance_create(sprite_width/2, -50, obj_beamer);
    b.movePattern = 1;
    b.destY = room_height*7/8;
}
if (secondTimer == 12.3) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(3/16);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 12.4) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(5/16);
    e1.destY = room_height*(1/4);
}
if (secondTimer == 12.5) { 
    e1 = instance_create(room_width/2, -50, obj_shooter);
    e1.movePattern = 1;
    e1.destX = room_width*(7/16);
    e1.destY = room_height*(1/2);
}
if (secondTimer == 13) instance_create(room_width/4, -50, obj_pitcher);
if (secondTimer == 20) instance_create(room_width/4, -50, obj_stinger);
if (secondTimer == 25) instance_create(room_width/8, -50, obj_pitcher);
if (secondTimer == 26) instance_create(room_width*(3/8), -50, obj_pitcher);
if (secondTimer == 27) instance_create(room_width/4, -50, obj_stinger);
if (secondTimer == 28) instance_create(room_width/6, -50, obj_pitcher);
if (secondTimer == 28) instance_create(room_width*(2/6), -50, obj_pitcher);
if (secondTimer == 35) { 
    audio_stop_sound(mus_catacombs);
    instance_create(room_width*(2/6), -50, prt_warning);
}
if (secondTimer == 40) { instance_create(room_width*(1/4), -50, obj_megabeamermk1); }
if (levelComplete) { unlock(LEVELS, 1); }
//debug(string(instance_count));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
