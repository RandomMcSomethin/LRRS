<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prt_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthLinked = false;
parent = noone;
turret = spr_turret;
xOffset = 0;
yOffset = 0;
dir = 0;
angle = image_angle;
recoil = 0;
coverColor = c_white;
hasCover = true;
armored = hasCover;
healthLinked = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (PAUSED) exit;
entityPhysics();
if (iF &gt; 0) {
    iF--;
}

entityHandleIce();
entityHandleFire();
entityHandleElec();

//imgSpeed
if (!setImgSpeed) { imgSpeed = image_speed; setImgSpeed = true; }
image_speed = imgSpeed*moveFactor*(1 - stunned);

//Targeting stuff
if (instance_exists(prt_player)) {
    target = prt_player;
} else target = noone;
//Log stuff
if (logNumber != -1) {
    name = ds_grid_get(LOG_GRID, 0, logNumber);
    disc = ds_grid_get(LOG_GRID, 1, logNumber);
    height = ds_grid_get(LOG_GRID, 2, logNumber);
    weight = ds_grid_get(LOG_GRID, 3, logNumber);
}
if (instance_exists(parent)) {
    x = parent.x + lengthdir_x(xOffset, pointDirection);
    y = parent.y + lengthdir_y(yOffset, pointDirection);
}
if (recoil &gt; 0) recoil = recoil/10;
if (hp &lt; 0.5 &amp;&amp; hasCover) {
    hasCover = false;
    armored = false;
    explosion();
    playSFX(snd_clank3);
    var expl = playSFX(snd_explosion);
    audio_sound_pitch(expl, 2);
}
if (healthLinked &amp;&amp; !instance_exists(parent)) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!healthLinked || !parent.isBoss) { 
    if (hp &lt;= 0) {
        instance_destroy();
    }
    iF = iFrames;
    collidedEntity = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!hasCover) { color = statFX(); }
if (hasCover) { coverColor = statFX(); }
image_blend = color;
draw_sprite_ext(turret, 2, x - lengthdir_x(recoil, angle + pointDirection), y - lengthdir_y(recoil, angle + pointDirection), image_xscale, image_yscale, angle + pointDirection, color, image_alpha);
draw_sprite_ext(turret, 0, x, y, image_xscale, image_yscale, pointDirection, color, image_alpha);
if (hasCover) draw_sprite_ext(turret, 1, x, y, image_xscale, image_yscale, pointDirection, coverColor, image_alpha);
if (instance_exists(parent)) pointDirection = parent.image_angle + dir;
drawFreeze();
drawStun();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
